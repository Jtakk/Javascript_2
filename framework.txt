・最初に +,*,/,= を入力できない。
・+,-,*,/ を連続で入力できない。(連続で押した場合は最後に押したボタンで書き換えられる)
・最後に +,-,*,/ を入力した場合は計算結果に影響を与えない。
・最初に 0を連続で入力できない。(00ボタンも含む)
・ +,-,*,/ の直後に0を連続で入力できない。 (00ボタンも含む)
・最初に小数点(.) を入力できない。(代わりに0.と入力される)
・小数点(.) が一つの数字につき、一つしか存在できない。
・ = を連続で入力できない。
・ = 入力後の結果を使用して続けて計算できるようにする。
・小数点以下の桁数表示に制限を与える。


入力状態を4つに分け、state という変数に入れる。
start
numeric
arithmetic
finish

1) start
  何も入力していない状態。
  ・ +,*,/,= を入力できない。
  ・ 0を連続で入力できない。
  ・ 小数点(.)を押すと 0. が入力される。

2) numeric
  数字を入力した直後の状態。

3) arithmetic
  算術演算子を入力した直後の状態。
  ・ +,-,*,/ を入力すると直前の算術演算子が上書きされる。
  ・ 0を連続で入力できない。
  ・ = を入力すると直前の算術演算子が無効となる。

4) finish
  等号(=) を入力した直後の状態。
  ・ = を入力できない。
  ・ 算術演算子を入力すると、計算結果を利用して続けて計算できる。



小数に関しては、別の状態を定義し、mode という変数に入れる。
integer
float

1) integer
  整数入力中の状態。
  ・小数点(.)を入力できる。

2) float
  小数入力中の状態。
  ・ +,-,*,/ が入力されるまでは小数点(.)を入力できない。

